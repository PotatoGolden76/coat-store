        -:    0:Source:/mnt/c/Users/rober/Desktop/University/Repos/A5-6-OOP/Sources/tests.cpp
        -:    0:Graph:/mnt/c/Users/rober/Desktop/University/Repos/A5-6-OOP/cmake-build-debug-coverage/CMakeFiles/A5_6_OOP.dir/Sources/tests.cpp.gcno
        -:    0:Data:/mnt/c/Users/rober/Desktop/University/Repos/A5-6-OOP/cmake-build-debug-coverage/CMakeFiles/A5_6_OOP.dir/Sources/tests.cpp.gcda
        -:    0:Runs:1
        -:    1:#include "../Headers/tests.h"
        -:    2:#include <cassert>
        -:    3:#include <iostream>
        -:    4:
function _Z10test_arrayv called 1 returned 100% blocks executed 67%
        1:    5:void test_array() {
        2:    6:    DynamicArray<int> arr;
        1:    6-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
    $$$$$:    6-block  1
call    4 never executed
       1*:    7:    assert(arr.get_size() == 0);
        1:    7-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:    7-block  1
call    3 never executed
        1:    8:    arr.add(1);
        1:    8-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
    $$$$$:    8-block  1
        1:    9:    arr.add(2);
        1:    9-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
    $$$$$:    9-block  1
       1*:   10:    assert(arr[0] == 1);
        1:   10-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:   10-block  1
call    3 never executed
       1*:   11:    assert(arr[1] == 2);
        1:   11-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:   11-block  1
call    3 never executed
        2:   12:    DynamicArray<int> arr2 = DynamicArray(arr);
        1:   12-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   12-block  1
call    3 returned 1
    $$$$$:   12-block  2
call    4 never executed
       1*:   13:    assert(arr2[0] == 1);
        1:   13-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:   13-block  1
call    3 never executed
       1*:   14:    assert(arr2[1] == 2);
        1:   14-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:   14-block  1
call    3 never executed
        -:   15:
        1:   16:    arr.clear();
        1:   16-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
       1*:   17:    assert(arr.get_size() == 0);
        1:   17-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:   17-block  1
call    3 never executed
        -:   18:
        1:   19:    arr = arr2;
        1:   19-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
       1*:   20:    assert(arr[0] == 1);
        1:   20-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:   20-block  1
call    3 never executed
       1*:   21:    assert(arr[1] == 2);
        1:   21-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:   21-block  1
call    3 never executed
       1*:   22:    assert(arr.get_size() == 2);
        1:   22-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:   22-block  1
call    3 never executed
        1:   23:    arr.remove(0);
        1:   23-block  0
call    0 returned 1
       1*:   24:    assert(arr[0] == 2);
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:   24-block  0
call    3 never executed
       1*:   25:    assert(arr.get_size() == 1);
        1:   25-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:   25-block  1
call    3 never executed
        1:   26:    arr = arr;
        1:   26-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
       1*:   27:    assert(arr[0] == 2);
        1:   27-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:   27-block  1
call    3 never executed
       1*:   28:    assert(arr.get_size() == 1);
        1:   28-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:   28-block  1
call    3 never executed
        1:   29:}
        -:   30:
function _Z9test_repov called 1 returned 100% blocks executed 52%
        1:   31:void test_repo() {
        2:   32:    Repo r;
        1:   32-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   32-block  1
call    3 returned 1
    $$$$$:   32-block  2
call    4 never executed
       1*:   33:    assert(r.get_size() == 0);
        1:   33-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   33-block  1
branch  3 taken 0 (fallthrough)
branch  4 taken 1
    %%%%%:   33-block  2
call    5 never executed
       1*:   34:    assert(r.get_index(1, "1") == -1);
        1:   34-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   34-block  1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:   34-block  2
branch  7 taken 0 (fallthrough)
branch  8 taken 1
    %%%%%:   34-block  3
call    9 never executed
        1:   34-block  4
call   10 returned 1
call   11 returned 1
    $$$$$:   34-block  5
call   12 never executed
    $$$$$:   34-block  6
    $$$$$:   34-block  7
call   13 never executed
    $$$$$:   34-block  8
       1*:   35:    assert(r.has(1, "1") == false);
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   35-block  0
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:   35-block  1
branch  7 taken 0 (fallthrough)
branch  8 taken 1
    %%%%%:   35-block  2
call    9 never executed
        1:   35-block  3
call   10 returned 1
call   11 returned 1
    $$$$$:   35-block  4
call   12 never executed
    $$$$$:   35-block  5
    $$$$$:   35-block  6
call   13 never executed
    $$$$$:   35-block  7
       1*:   36:    assert(r.has(Coat()) == false);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   36-block  0
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   36-block  1
branch  6 taken 0 (fallthrough)
branch  7 taken 1
    %%%%%:   36-block  2
call    8 never executed
        1:   36-block  3
call    9 returned 1
    $$$$$:   36-block  4
call   10 never executed
    $$$$$:   36-block  5
        1:   37:    r.add(Coat());
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   37-block  0
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   37-block  1
call    6 returned 1
    $$$$$:   37-block  2
call    7 never executed
    $$$$$:   37-block  3
       1*:   38:    assert(r.has(Coat()) == true);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   38-block  0
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   38-block  1
branch  6 taken 0 (fallthrough)
branch  7 taken 1
    %%%%%:   38-block  2
call    8 never executed
        1:   38-block  3
call    9 returned 1
    $$$$$:   38-block  4
call   10 never executed
    $$$$$:   38-block  5
       1*:   39:    assert(r.has(0, "") == true);
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   39-block  0
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:   39-block  1
branch  7 taken 0 (fallthrough)
branch  8 taken 1
    %%%%%:   39-block  2
call    9 never executed
        1:   39-block  3
call   10 returned 1
call   11 returned 1
    $$$$$:   39-block  4
call   12 never executed
    $$$$$:   39-block  5
    $$$$$:   39-block  6
call   13 never executed
    $$$$$:   39-block  7
       1*:   40:    assert(r.get_index(0, "") == 0);
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   40-block  0
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:   40-block  1
branch  7 taken 0 (fallthrough)
branch  8 taken 1
    %%%%%:   40-block  2
call    9 never executed
        1:   40-block  3
call   10 returned 1
call   11 returned 1
    $$$$$:   40-block  4
call   12 never executed
    $$$$$:   40-block  5
    $$$$$:   40-block  6
call   13 never executed
    $$$$$:   40-block  7
       1*:   41:    assert(r.get_at(0).to_string() == "Size: 0 | Color:  | Price: 0.000000 | Quantity: 0 | Photo: ");
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   41-block  0
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   41-block  1
call    6 returned 1
branch  7 taken 0 (fallthrough)
branch  8 taken 1
    %%%%%:   41-block  2
call    9 never executed
        1:   41-block  3
call   10 returned 1
        1:   42:    r.remove(Coat());
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   42-block  0
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   42-block  1
call    6 returned 1
    $$$$$:   42-block  2
call    7 never executed
    $$$$$:   42-block  3
       1*:   43:    assert(r.get_size() == 0);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   43-block  0
branch  3 taken 0 (fallthrough)
branch  4 taken 1
    %%%%%:   43-block  1
call    5 never executed
        -:   44:
        -:   45:
        1:   46:}
        -:   47:
function _Z9test_coatv called 1 returned 100% blocks executed 58%
        1:   48:void test_coat() {
        2:   49:    Coat c = Coat();
        1:   49-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
    $$$$$:   49-block  1
call    4 never executed
       1*:   50:    assert(c.get_size() == 0);
        1:   50-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:   50-block  1
call    3 never executed
       1*:   51:    assert(c.get_price() == 0.0f);
        1:   51-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:   51-block  1
call    3 never executed
       1*:   52:    assert(c.get_quantity() == 0);
        1:   52-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:   52-block  1
call    3 never executed
       1*:   53:    assert(c.get_color() == "");
        1:   53-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   53-block  1
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
    %%%%%:   53-block  2
call    6 never executed
        1:   53-block  3
call    7 returned 1
       1*:   54:    assert(c.get_photo() == "");
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   54-block  0
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
    %%%%%:   54-block  1
call    6 never executed
        1:   54-block  2
call    7 returned 1
        -:   55:
        2:   56:    Coat c2 = Coat(72, "1222", 1.0f, 1, "1");
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   56-block  0
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:   56-block  1
call    8 returned 1
branch  9 taken 1 (fallthrough)
branch 10 taken 0 (throw)
call   11 returned 1
call   12 returned 1
call   13 returned 1
    $$$$$:   56-block  2
    $$$$$:   56-block  3
    $$$$$:   56-block  4
    $$$$$:   56-block  5
    $$$$$:   56-block  6
call   14 never executed
       1*:   57:    assert(c2.get_size() == 72);
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:   57-block  0
call    3 never executed
       1*:   58:    assert(c2.get_price() == 1.0f);
        1:   58-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:   58-block  1
call    3 never executed
       1*:   59:    assert(c2.get_quantity() == 1);
        1:   59-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:   59-block  1
call    3 never executed
       1*:   60:    assert(c2.get_color() == "1222");
        1:   60-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   60-block  1
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
    %%%%%:   60-block  2
call    6 never executed
        1:   60-block  3
call    7 returned 1
       1*:   61:    assert(c2.get_photo() == "1");
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   61-block  0
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
    %%%%%:   61-block  1
call    6 never executed
        1:   61-block  2
call    7 returned 1
        -:   62:
       1*:   63:    assert(Coat::compare_coats(c, c2) == -1);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   63-block  0
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   63-block  1
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:   63-block  2
branch  9 taken 0 (fallthrough)
branch 10 taken 1
    %%%%%:   63-block  3
call   11 never executed
        1:   63-block  4
call   12 returned 1
call   13 returned 1
    $$$$$:   63-block  5
call   14 never executed
    $$$$$:   63-block  6
    $$$$$:   63-block  7
call   15 never executed
    $$$$$:   63-block  8
        1:   64:    c.update(72, "1222", 1.0f, 1, "1");
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   64-block  0
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:   64-block  1
call    8 returned 1
branch  9 taken 1 (fallthrough)
branch 10 taken 0 (throw)
        1:   64-block  2
call   11 returned 1
call   12 returned 1
call   13 returned 1
call   14 returned 1
    $$$$$:   64-block  3
call   15 never executed
    $$$$$:   64-block  4
    $$$$$:   64-block  5
call   16 never executed
    $$$$$:   64-block  6
    $$$$$:   64-block  7
call   17 never executed
    $$$$$:   64-block  8
    $$$$$:   64-block  9
call   18 never executed
    $$$$$:   64-block 10
       1*:   65:    assert(c.get_size() == 72);
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:   65-block  0
call    3 never executed
       1*:   66:    assert(c.get_price() == 1.0f);
        1:   66-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:   66-block  1
call    3 never executed
       1*:   67:    assert(c.get_quantity() == 1);
        1:   67-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:   67-block  1
call    3 never executed
       1*:   68:    assert(c.get_color() == "1222");
        1:   68-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   68-block  1
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
    %%%%%:   68-block  2
call    6 never executed
        1:   68-block  3
call    7 returned 1
       1*:   69:    assert(c.get_photo() == "1");
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   69-block  0
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
    %%%%%:   69-block  1
call    6 never executed
        1:   69-block  2
call    7 returned 1
        -:   70:
       1*:   71:    assert(Coat::compare_coats(c, c2) == 0);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   71-block  0
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   71-block  1
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:   71-block  2
branch  9 taken 0 (fallthrough)
branch 10 taken 1
    %%%%%:   71-block  3
call   11 never executed
        1:   71-block  4
call   12 returned 1
call   13 returned 1
    $$$$$:   71-block  5
call   14 never executed
    $$$$$:   71-block  6
    $$$$$:   71-block  7
call   15 never executed
    $$$$$:   71-block  8
       1*:   72:    assert(c.to_string() == "Size: 72 | Color: 1222 | Price: 1.000000 | Quantity: 1 | Photo: 1");
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   72-block  0
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
    %%%%%:   72-block  1
call    6 never executed
        1:   72-block  2
call    7 returned 1
call    8 returned 1
        -:   73:
        1:   74:}
        -:   75:
function _Z12test_servicev called 1 returned 100% blocks executed 50%
        1:   76:void test_service() {
        2:   77:    Repo r;
        1:   77-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   77-block  1
call    3 returned 1
    $$$$$:   77-block  2
call    4 never executed
        1:   78:    Service s = Service(r);
        1:   78-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
       1*:   79:    assert(s.get_size() == 0);
        1:   79-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   79-block  1
branch  3 taken 0 (fallthrough)
branch  4 taken 1
    %%%%%:   79-block  2
call    5 never executed
       1*:   80:    assert(s.get_repo().get_size() == r.get_size());
        1:   80-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   80-block  1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:   80-block  2
branch  7 taken 0 (fallthrough)
branch  8 taken 1
    %%%%%:   80-block  3
call    9 never executed
        1:   81:    s.add(0, "", 0.0f, 0, "");
        1:   81-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   81-block  1
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:   81-block  2
call    8 returned 1
branch  9 taken 1 (fallthrough)
branch 10 taken 0 (throw)
        1:   81-block  3
call   11 returned 1
call   12 returned 1
call   13 returned 1
call   14 returned 1
    $$$$$:   81-block  4
call   15 never executed
    $$$$$:   81-block  5
    $$$$$:   81-block  6
call   16 never executed
    $$$$$:   81-block  7
    $$$$$:   81-block  8
call   17 never executed
    $$$$$:   81-block  9
    $$$$$:   81-block 10
call   18 never executed
    $$$$$:   81-block 11
       1*:   82:    assert(Coat::compare_coats(s.get_repo().get_at(0), Coat()) == 0);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   82-block  0
call    3 returned 1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:   82-block  1
call    7 returned 1
branch  8 taken 1 (fallthrough)
branch  9 taken 0 (throw)
        1:   82-block  2
call   10 returned 1
branch 11 taken 1 (fallthrough)
branch 12 taken 0 (throw)
        1:   82-block  3
branch 13 taken 0 (fallthrough)
branch 14 taken 1
    %%%%%:   82-block  4
call   15 never executed
        1:   82-block  5
call   16 returned 1
call   17 returned 1
    $$$$$:   82-block  6
call   18 never executed
    $$$$$:   82-block  7
    $$$$$:   82-block  8
call   19 never executed
    $$$$$:   82-block  9
        1:   83:    s.update(0, "", 0.0f, 1, "");
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   83-block  0
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:   83-block  1
call    8 returned 1
branch  9 taken 1 (fallthrough)
branch 10 taken 0 (throw)
        1:   83-block  2
call   11 returned 1
call   12 returned 1
call   13 returned 1
call   14 returned 1
    $$$$$:   83-block  3
call   15 never executed
    $$$$$:   83-block  4
    $$$$$:   83-block  5
call   16 never executed
    $$$$$:   83-block  6
    $$$$$:   83-block  7
call   17 never executed
    $$$$$:   83-block  8
    $$$$$:   83-block  9
call   18 never executed
    $$$$$:   83-block 10
       1*:   84:    assert(Coat::compare_coats(s.get_repo().get_at(0), Coat(0, "", 0.0f, 1, "")) == 0);
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   84-block  0
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:   84-block  1
call    8 returned 1
branch  9 taken 1 (fallthrough)
branch 10 taken 0 (throw)
        1:   84-block  2
call   11 returned 1
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
        1:   84-block  3
call   15 returned 1
branch 16 taken 1 (fallthrough)
branch 17 taken 0 (throw)
        1:   84-block  4
call   18 returned 1
branch 19 taken 1 (fallthrough)
branch 20 taken 0 (throw)
        1:   84-block  5
branch 21 taken 0 (fallthrough)
branch 22 taken 1
    %%%%%:   84-block  6
call   23 never executed
        1:   84-block  7
call   24 returned 1
call   25 returned 1
call   26 returned 1
call   27 returned 1
call   28 returned 1
call   29 returned 1
    $$$$$:   84-block  8
call   30 never executed
    $$$$$:   84-block  9
    $$$$$:   84-block 10
call   31 never executed
    $$$$$:   84-block 11
    $$$$$:   84-block 12
call   32 never executed
    $$$$$:   84-block 13
    $$$$$:   84-block 14
call   33 never executed
    $$$$$:   84-block 15
    $$$$$:   84-block 16
call   34 never executed
    $$$$$:   84-block 17
    $$$$$:   84-block 18
call   35 never executed
    $$$$$:   84-block 19
        1:   85:    s.remove(0, "");
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   85-block  0
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:   85-block  1
call    7 returned 1
call    8 returned 1
    $$$$$:   85-block  2
call    9 never executed
    $$$$$:   85-block  3
    $$$$$:   85-block  4
call   10 never executed
    $$$$$:   85-block  5
       1*:   86:    assert(s.get_size() == 0);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   86-block  0
branch  3 taken 0 (fallthrough)
branch  4 taken 1
    %%%%%:   86-block  1
call    5 never executed
        1:   87:}
        -:   88:
function _Z5testsv called 1 returned 100% blocks executed 100%
        1:   89:void tests()  {
        1:   90:    test_array();
        1:   90-block  0
call    0 returned 1
        1:   91:    test_coat();
call    0 returned 1
        1:   92:    test_repo();
call    0 returned 1
        1:   93:    test_service();
call    0 returned 1
        1:   94:}
